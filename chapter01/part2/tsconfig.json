{
  /*
  tsconfig.json是ts编译器的配置文件，ts编译器能够根据它的信息对代码进行编译
  include:"需要" 编译的ts文件
  ** 表示任意目录，* 表示任意文件
  exclude:"不需要" 编译的ts文件
    默认值:["node_modules","bower_components","jspm_packages"]
  extends:定义被继承的配置文件， 类似于引入其他配置文件。
  files:[],指定编译的单个文件，当文件少的时候使用，include是指定文件夹
  */
  "include": [
    "./src/**/*",//这里表示的是src目录下的任意目录的任意文件都会被编译
  ],
  // "exclude": [
  //   "./src/app2.ts",
  //   "./src/hello/*",
  // ]

  //compilerOptions编译器选项
  "compilerOptions":{
    //target  用来指定ts被编译为的es的版本,默认es3
    //可选版本：'es3', 'es5', 'es6', 'es2015', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'es2021', 'es2022', 'esnext'.
    "target": "es2015",
    //module  指定要使用的模块的规范
    //可选规范 'none', 'commonjs', 'amd', 'system', 'umd', 'es6', 'es2015', 'es2020', 'es2022', 'esnext', 'node16', 'nodenext'.
    "module": "es2015",

    //lib 用来指定项目中要使用的库,一般不改，如果值为空则表示项目中不使用库。
    //可选库：'es5', 'es6', 'es2015', 'es7', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'es2021', 'es2022', 'esnext', 'dom', 'dom.iterable', 'webworker', 'webworker.importscripts', 'webworker.iterable', 'scripthost', 'es2015.core', 'es2015.collection', 'es2015.generator', 'es2015.iterable', 'es2015.promise', 'es2015.proxy', 'es2015.reflect', 'es2015.symbol', 'es2015.symbol.wellknown', 'es2016.array.include', 'es2017.object', 'es2017.sharedmemory', 'es2017.string', 'es2017.intl', 'es2017.typedarrays', 'es2018.asyncgenerator', 'es2018.asynciterable', 'es2018.intl', 'es2018.promise', 'es2018.regexp', 'es2019.array', 'es2019.object', 'es2019.string', 'es2019.symbol', 'es2020.bigint', 'es2020.date', 'es2020.promise', 'es2020.sharedmemory', 'es2020.string', 'es2020.symbol.wellknown', 'es2020.intl', 'es2020.number', 'es2021.promise', 'es2021.string', 'es2021.weakref', 'es2021.intl', 'es2022.array', 'es2022.error', 'es2022.intl', 'es2022.object', 'es2022.sharedmemory', 'es2022.string', 'esnext.array', 'esnext.symbol', 'esnext.asynciterable', 'esnext.intl', 'esnext.bigint', 'esnext.string', 'esnext.promise', 'esnext.weakref'.

    // "lib":[],
    
    //outDir：指定编译后文件所在的目录
    "outDir": "./dist",

    //设置outFile后 将所有编译后的文件都合并到同一个文件里
    // "outFile": "./dist/app.js",

    //是否对js文件进行编译，默认是false
    "allowJs": false,
    //检测js代码是否符合语法规范，默认是false
    "checkJs": false,
    //是否移除注释,开启后编译后的js将没有注释信息
    "removeComments": false,
    //不生成编译后的文件,默认false
    "noEmit": false,
      

    //所有严格检查的总开关
    //这里是true，以下开关开启才有效
    "strict": true,

    //当有错误时，不生成编译后的文件
    "noEmitOnError": true,
    //用来设置编译后的文件是否使用严格模式，默认false
    //代码有导入导出时自动进入严格模式
    "alwaysStrict": true,
    //不允许隐式的any类型
    "noImplicitAny": true,
    //不允许不明确类型的this
    "noImplicitThis": true,
    //严格的检查空值,类似于空指针
    "strictNullChecks": true,


  }   
}